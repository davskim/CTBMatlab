%% New and improved Capture the breaker seeder

%% read in CSV of entrants
allCompsCell = readcell('Entries.csv');
competitors = allCompsCell(:,1);
meanscoresPre = mean(cell2mat(allCompsCell(:,2:4)),2);
%% Normalize the scores
zscoredComps = cell2mat(allCompsCell(:,2:4));
zscoredComps = zscore(zscoredComps,1);

%checking if normal
figure;
qqplot([zscoredComps(:,1);zscoredComps(:,2);zscoredComps(:,3)]);
title('Post Normalization Aggregate')
figure;
qqplot(cell2mat([allCompsCell(:,2);allCompsCell(:,3);allCompsCell(:,4)]));
title('Pre Normalization Aggregate')
%% Calculate the mean
meanscores = mean(zscoredComps,2);

%% Sort based on scores

[sortScores, perm] = sort(meanscores,'descend');
sortnames = competitors(perm);

%% Hasty clustering based on rounding zscores (TODO: Sweeping Kmeans clustering)
% Randomizing within each integer bracket to treat "equivalent bboys"
multScores = sortScores * 5;
top32 = floor(multScores(1:32));
top32names = sortnames(1:32);

for i = min(top32):max(top32)
    shuffDex = top32==i;
    shuffnames = top32names(shuffDex);
    shuffnames = shuffnames(randperm(length(shuffnames)));
    top32names(shuffDex) = shuffnames;
end

%% Creating the bracket now
fid = fopen('bracket.txt','w');
fprintf([top32names{23}, ' and ', top32names{19}])
